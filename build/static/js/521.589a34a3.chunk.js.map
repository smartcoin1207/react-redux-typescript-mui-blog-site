{"version":3,"file":"static/js/521.589a34a3.chunk.js","mappings":"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","sources":["pages/users/EditUser.tsx"],"sourcesContent":["import { useState, useEffect, useRef, ChangeEvent } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport dayjs from \"dayjs\";\r\nimport \"dayjs/locale/ja\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Stack,\r\n  Box,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Typography,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Checkbox,\r\n  Grid,\r\n  Avatar,\r\n  IconButton,\r\n  SelectChangeEvent,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormLabel,\r\n} from \"@mui/material\";\r\nimport { Category, Edit, Groups } from \"@mui/icons-material\";\r\n\r\nimport { ICategory } from \"../../models/category\";\r\nimport {\r\n  AddLeader,\r\n  AddUser,\r\n  EditLeaderAction,\r\n  EditUserAction,\r\n  GetUserById,\r\n  getAllGroups,\r\n  getData,\r\n} from \"../../redux/actionCreators/userActions\";\r\n// import \"../../assets/css/style.css\";\r\nimport { RootState } from \"../../redux/store/store\";\r\nimport { ThemeColor } from \"../../styles/GlobalStyle\";\r\nimport { getAllCategories } from \"../../redux/actionCreators/blogActions\";\r\nimport { Root } from \"react-dom/client\";\r\nimport { current } from \"@reduxjs/toolkit\";\r\nimport { serverUrl } from \"../../services/axios\";\r\nimport { group } from \"console\";\r\n\r\ninterface IUser {\r\n  name: string;\r\n  user_id?: string | null;\r\n  role_id: string;\r\n}\r\n\r\nconst EditUser = () => {\r\n  const {id} = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const all_categories = useSelector(\r\n    (state: RootState) => state.blog.all_categories\r\n  );\r\n  const all_groups = useSelector((state: RootState) => state.blog.all_groups);\r\n  const user = useSelector((state: RootState) => state.auth.user );\r\n  const current_user = useSelector((state: RootState) => state.users.current_user );\r\n\r\n  const avatarInputRef = useRef<HTMLInputElement>(null);\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"usertoken\"]);\r\n  const usertoken = cookies.usertoken;\r\n  const [name, setName] = useState(\"\");\r\n  const [read_name, setReadName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dateOfBirth, setDateOfBirth] = useState(\"1990-01-01\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user_id, setUserId] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [memo, setMemo] = useState(\"\");\r\n  const [selectedRole, setSelectedRole] = useState(\"2\");\r\n  const [selectedDevice, setSelectedDevice] = useState(\"1\");\r\n  const [ninetieth_life, setNinetieth_life] = useState(\"\");\r\n  const [work_life, setWork_life] = useState(\"\");\r\n  const [die_life, setDie_life] = useState(\"\");\r\n  const [healthy_life, setHealthy_life] = useState(\"\");\r\n  const [average_life, setAverage_life] = useState(\"\");\r\n  const [status, setStatus] = useState(\"1\");\r\n  const [old, setOld] = useState(0);\r\n\r\n  const [commonData, setCommonData] = useState<ICategory[]>([]);\r\n  const [commonData2, setCommonData2] = useState<ICategory[]>([]);\r\n\r\n  const [groupData, setGroupData] = useState<ICategory[]>([]);\r\n  const [selectedGroupId, setSelectedGroupId] = useState(\"\");\r\n  const [selectedGroup, setSelectedGroup] = useState<any>(null);\r\n  const [teamGroups, setTeamGroups] = useState<any[]>([]);\r\n  const maxDate = dayjs().endOf(\"day\");\r\n\r\n  const [allowedCommonCategories, setAllowedCommonCategories] = useState<any[]>(\r\n    []\r\n  );\r\n  const [allowedCommon2Categories, setAllowedCommon2Categories] = useState<\r\n    any[]\r\n  >([]);\r\n\r\n  const [allowedGroupCategories, setAllowedGroupCategories] = useState<any[]>(\r\n    []\r\n  );\r\n  const [selectedAvatar, setSelectedAvatar] = useState(\"\");\r\n  const [avatar, setAvatar] = useState<File | null>(null);\r\n  const [showRoleSelection, setShowRoleSelection] = useState(true);\r\n\r\n  let role: number = 0;\r\n\r\n  if (usertoken) {\r\n    const user: IUser = jwt_decode(usertoken);\r\n    role = user ? parseInt(user.role_id, 10) : 4;\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(GetUserById(id));\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (role == 2) {\r\n      setShowRoleSelection(false);\r\n      setSelectedRole(\"3\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const currentDate = dayjs();\r\n    const birthDate = dayjs(dateOfBirth);\r\n    const currentAge = currentDate.diff(birthDate, \"year\");\r\n    setOld(currentAge);\r\n    console.log(currentAge);\r\n  }, [dateOfBirth]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategories());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(current_user) {\r\n      setName(current_user.name);\r\n      setReadName(current_user.read_name);\r\n      setEmail(current_user.email);\r\n      setDateOfBirth(current_user.birthday);\r\n      setSelectedAvatar(`${serverUrl}upload/images/${current_user.avatar}`);\r\n      setSelectedGroupId(current_user.group_id);\r\n      \r\n      setUserId(current_user.user_id);\r\n      setPhone(current_user.phone_number);\r\n      setMemo(current_user.memo);\r\n      setSelectedRole(current_user.role_id);\r\n      if(current_user.phone_device == 'android') {\r\n        setSelectedDevice('1');\r\n      } else {\r\n        setSelectedDevice('2');\r\n      }\r\n\r\n      \r\n      setNinetieth_life(current_user.ninetieth_life);\r\n      setWork_life(current_user.work_life);\r\n      setDie_life(current_user.die_life);\r\n      setHealthy_life(current_user.healthy_life);\r\n      setAverage_life(current_user.average_life);\r\n      setStatus(current_user.status);\r\n\r\n      const allowed_categories = JSON.parse(current_user?.allowed_categories);\r\n\r\n      setAllowedGroupCategories(allowed_categories[current_user.group_id]);\r\n      setAllowedCommonCategories(allowed_categories['1']);\r\n      setAllowedCommon2Categories(allowed_categories['2']);\r\n    }\r\n  }, [current_user]);\r\n\r\n  useEffect(() => {\r\n    if (all_groups) {\r\n      const filteredGroups = all_groups.filter(\r\n        (group) => group.id != 1 && group.id != 2\r\n      );\r\n      all_groups.forEach((group1:any) => {\r\n        if(group1.id == current_user?.group_id) {\r\n          setSelectedGroup(group1);\r\n          return 0;\r\n        }\r\n      });\r\n      setTeamGroups(filteredGroups);\r\n    } \r\n    if(role == 2) {\r\n      if(user)\r\n      setSelectedGroupId(user?.group_id);\r\n    }\r\n  }, [all_groups]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(all_categories) {\r\n      setCommonData(all_categories['1']);\r\n      setCommonData2(all_categories['2']);\r\n\r\n      setGroupData(all_categories[`${selectedGroupId}`]);\r\n    }\r\n  }, [all_categories]);\r\n\r\n  const isSelfGroupShow = () => {\r\n    let isSelfGroupShow: boolean = false;\r\n    if(selectedRole == '3' && groupData){\r\n      isSelfGroupShow = true;      \r\n    }\r\n    \r\n    return isSelfGroupShow;\r\n  }\r\n\r\n  const handleRoleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setSelectedRole(event.target.value);\r\n    if (!selectedGroupId) {\r\n      setGroupData([]);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  const handleSelectChange = (event: SelectChangeEvent) => {\r\n    setSelectedGroupId(event.target.value as string);\r\n    let tmp = null;\r\n    teamGroups.forEach((group) => {\r\n      if (group.id == event.target.value) {\r\n        tmp = group;\r\n        return;\r\n      }\r\n    });\r\n    setSelectedGroup(tmp);\r\n\r\n    if(all_categories) {\r\n      setGroupData(all_categories[event.target.value as string]);\r\n    }\r\n  };\r\n\r\n  const handleDeviceChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setSelectedDevice(event.target.value);\r\n  };\r\n\r\n  //common1 group\r\n  const handleCommonCheckboxChange = (event: any) => {\r\n    const value = event.target.value;\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setAllowedCommonCategories((prevValues: any[]) => [...prevValues, value]);\r\n      console.log(allowedCommonCategories);\r\n    } else {\r\n      setAllowedCommonCategories((prevValues: any[]) =>\r\n        prevValues.filter((v) => v !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  //common2 group\r\n  const handleCommon2CheckboxChange = (event: any) => {\r\n    const value = event.target.value;\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setAllowedCommon2Categories((prevValues: any[]) => [\r\n        ...prevValues,\r\n        value,\r\n      ]);\r\n      console.log(allowedCommonCategories);\r\n    } else {\r\n      setAllowedCommon2Categories((prevValues: any[]) =>\r\n        prevValues.filter((v) => v !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  //my group\r\n  const handleGroupCheckboxChange = (event: any) => {\r\n    const value = event.target.value;\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setAllowedGroupCategories((prevValues: any[]) => [...prevValues, value]);\r\n    } else {\r\n      setAllowedGroupCategories((prevValues: any[]) =>\r\n        prevValues.filter((v) => v !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleAvatarUpload = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const fileType = file.type.split(\"/\")[0]; // Get the file type\r\n\r\n      if (fileType === \"image\") {\r\n        setSelectedAvatar(URL.createObjectURL(file));\r\n        setAvatar(file);\r\n      } else {\r\n        console.error(\"Invalid file type. Please select an image file.\");\r\n      }\r\n    } else {\r\n      setSelectedAvatar(\"\");\r\n    }\r\n  };\r\n\r\n  const handleEditAvatar = () => {\r\n    if (avatarInputRef.current) {\r\n      avatarInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date: any) => {\r\n    const formattedDate = dayjs(date).format(\"YYYY-MM-DD\");\r\n    console.log(formattedDate);\r\n    setDateOfBirth(formattedDate);\r\n    // Do something with the formattedDate (e.g., update state)\r\n  };\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    if(old <=0) {\r\n      toast.error(\"誕生日を正確に入力してください。\", {\r\n        autoClose: 1000,\r\n      });\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n\r\n    if (avatar) {\r\n      formData.append(\"avatar\", avatar);\r\n    }\r\n\r\n    formData.append(\"name\", name);\r\n    formData.append(\"read_name\", read_name);\r\n    formData.append(\"email\", email);\r\n    // formData.append(\"password\", password);\r\n    formData.append(\"birthday\", dateOfBirth);\r\n    formData.append(\"user_id\", user_id);\r\n    formData.append(\"phone_number\", phone);\r\n    formData.append(\"phone_device\", selectedDevice);\r\n    formData.append(\"role_id\", selectedRole);\r\n    formData.append(\"group_id\", selectedGroupId);\r\n    formData.append(\"status\", \"1\");\r\n    formData.append(\"memo\", memo);\r\n    formData.append(\"ninetieth_life\", ninetieth_life);\r\n    formData.append(\"work_life\", work_life);\r\n    formData.append(\"die_life\", die_life);\r\n    formData.append(\"healthy_life\", healthy_life);\r\n    formData.append(\"average_life\", average_life);\r\n    formData.append(\"status\", status);\r\n\r\n    let allowed_categories = null;\r\n    \r\n    if(role == 1 && selectedRole == '2') {\r\n      allowed_categories = {\r\n        '2' : allowedCommon2Categories,\r\n      }\r\n    } else  if(role ==1 && selectedRole == '3') {\r\n      allowed_categories = {\r\n        '1' : allowedCommonCategories,\r\n        [selectedGroupId] : allowedGroupCategories,\r\n      }\r\n    } else if(role == 2) {\r\n      allowed_categories = {\r\n        '1' : allowedCommonCategories,\r\n        [selectedGroupId] : allowedGroupCategories\r\n      }\r\n    }\r\n\r\n    formData.append(\"allowed_categories\", JSON.stringify(allowed_categories));\r\n\r\n    if(selectedRole == '2' || current_user.role_id == '2') {\r\n      dispatch(EditLeaderAction(navigate, formData, id));\r\n    } \r\n    else {\r\n      dispatch(EditUserAction(navigate, formData, id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: { xs: \"100%\", ms: \"90%\", md: \"80%\", lg: \"50%\" }, mb: 2 }}>\r\n      <Typography\r\n        sx={{\r\n          fontSize: \"2rem\",\r\n          mt: 1,\r\n          mb: 1,\r\n          color: ThemeColor.main,\r\n          fontWeight: \"600\",\r\n        }}\r\n        variant=\"h4\"\r\n      >\r\n        ユーザーの編集\r\n      </Typography>\r\n\r\n      <Card\r\n        sx={{\r\n          // mt: 1,\r\n          border: \"solid 2px initial\",\r\n          borderRadius: '10px',\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {/* <Divider sx={{ border: \"1px dotted #2196f3\" }} /> */}\r\n        <CardContent>\r\n          <form onSubmit={handleSubmit}>\r\n            <Box\r\n              sx={{\r\n                position: \"relative\",\r\n                width: 130,\r\n                height: 130,\r\n                m: \"auto\",\r\n                p: 0,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Avatar\r\n                sx={{\r\n                  width: 130,\r\n                  height: 130,\r\n                  m: \"auto\",\r\n                  p: 0,\r\n                  justifyContent: \"center\",\r\n                }}\r\n                src={selectedAvatar ? selectedAvatar : \"\"}\r\n              />\r\n              <IconButton\r\n                id=\"edit-avatar-icon\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  top: \"50%\",\r\n                  left: \"50%\",\r\n                  transform: \"translate(-50%, -50%)\",\r\n                }}\r\n                onClick={handleEditAvatar}\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  component=\"label\"\r\n                  sx={{ display: \"none\" }}\r\n                >\r\n                  Avatar\r\n                  <input\r\n                    ref={avatarInputRef}\r\n                    id=\"avatar-upload\"\r\n                    type=\"file\"\r\n                    onChange={handleAvatarUpload}\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                </Button>\r\n                <Edit sx={{ width: \"40px\", height: \"40px\" }} />\r\n              </IconButton>\r\n            </Box>\r\n            <Stack spacing={2} direction=\"row\" sx={{ mb: 4, mt: 4 }}>\r\n              <TextField\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                label=\"名前\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                style={{ borderRadius: \"10px\" }}\r\n                value={name}\r\n                fullWidth\r\n                required\r\n              />\r\n              <TextField\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                label=\"読み\"\r\n                onChange={(e) => setReadName(e.target.value)}\r\n                value={read_name}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Stack>\r\n\r\n            {(showRoleSelection && current_user?.role_id != '2') &&  (\r\n              <Card\r\n                sx={{\r\n                  marginTop: \"20px\",\r\n                  border: \"solid 1px #2196f3\",\r\n                }}\r\n              >\r\n                <CardHeader title=\"ユーザー権限\" sx={{ fontSize: \"16px\" }} />\r\n                <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n                <CardContent>\r\n                  <FormControl>\r\n                    <RadioGroup\r\n                      row\r\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                      name=\"row-radio-buttons-group\"\r\n                      value={selectedRole}\r\n                      onChange={handleRoleChange}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"2\"\r\n                        control={<Radio />}\r\n                        label=\"管理者権限(グループリーダー)\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"3\"\r\n                        control={<Radio />}\r\n                        label=\"閲覧のみユーザー\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {selectedRole == \"3\" && role == 1 && (\r\n              <FormControl sx={{ mt: 4 }} fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  グループを選択\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"group-select-label\"\r\n                  id=\"user-group-select\"\r\n                  value={selectedGroupId}\r\n                  label=\"グループを選択\"\r\n                  onChange={handleSelectChange}\r\n                  required\r\n                >\r\n                  {teamGroups?.map((group: any) => {\r\n                    return (\r\n                      <MenuItem key={group.id + 1000} value={group.id}>\r\n                        {group.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n\r\n            <Typography sx={{ mt: 4, mb: 1, ml: 1 }} variant=\"body1\">\r\n              生年月日\r\n            </Typography>\r\n\r\n            <Box sx={{ mb: 4, width: \"100%\" }}>\r\n              <DatePicker\r\n                format=\"YYYY/MM/DD\"\r\n                onChange={handleDateChange}\r\n                value={ dayjs(dateOfBirth)}\r\n              />\r\n            </Box>\r\n\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label=\"メールアドレス\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                  fullWidth\r\n                  required\r\n                  sx={{ mb: 4 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"phone\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label=\"電話番号\"\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                  value={phone}\r\n                  fullWidth\r\n                  required\r\n                  sx={{ mb: 4 }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label=\"ログインID\"\r\n                  onChange={(e) => setUserId(e.target.value)}\r\n                  value={user_id}\r\n                  fullWidth\r\n                  required\r\n                  sx={{ mb: 4 }}\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  label=\"ログインパスワード\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                  required\r\n                  fullWidth\r\n                  sx={{ mb: 4 }}\r\n                />\r\n              </Grid> */}\r\n            </Grid>\r\n\r\n            <Card\r\n              sx={{\r\n                mb: 4,\r\n                border: \"solid 1px #2196f3\",\r\n              }}\r\n            >\r\n              <CardHeader title=\"使用スマホ端末\" />\r\n              <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n              <CardContent>\r\n                <FormControl>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                    value={selectedDevice}\r\n                    onChange={handleDeviceChange}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"1\"\r\n                      control={<Radio />}\r\n                      label=\"android\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"2\"\r\n                      control={<Radio />}\r\n                      label=\"iPhone\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <TextField\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              label=\"メモ欄、 職業、 性格など\"\r\n              onChange={(e) => setMemo(e.target.value)}\r\n              value={memo}\r\n              multiline\r\n              fullWidth\r\n              rows={4}\r\n              sx={{ mb: 4 }}\r\n            />\r\n\r\n            <Card\r\n              sx={{\r\n                mb: 4,\r\n                border: \"solid 1px #2196f3\",\r\n              }}\r\n            >\r\n              <CardHeader title=\"残りの寿命設定\" />\r\n              <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n              <CardContent>\r\n                {/* <FormControl> */}\r\n                <List>\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・人生の9割が確定する(30歳)まで\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={ninetieth_life}\r\n                      onChange={(e) => setNinetieth_life(e.target.value)}\r\n                      inputProps={{ min: old, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      歳\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・労働寿命まで後\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={work_life}\r\n                      onChange={(e) => setWork_life(e.target.value)}\r\n                      inputProps={{ min: old, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      歳\r\n                    </Typography>\r\n                  </ListItem>\r\n\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・死んでいるかもしれない日まで\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={die_life}\r\n                      onChange={(e) => setDie_life(e.target.value)}\r\n                      inputProps={{ min: old, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      歳\r\n                    </Typography>\r\n                  </ListItem>\r\n\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・健康寿命まで後\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={healthy_life}\r\n                      onChange={(e) => setHealthy_life(e.target.value)}\r\n                      inputProps={{ min: old, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      歳\r\n                    </Typography>\r\n                  </ListItem>\r\n\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                  <ListItem sx={{ padding: 0, margin: 0 }}>\r\n                    <ListItemText primary=\"・平均寿命まで後\" />\r\n\r\n                    <TextField\r\n                      type=\"number\"\r\n                      label=\"\"\r\n                      size=\"small\"\r\n                      sx={{ width: \"70px\" }}\r\n                      value={average_life}\r\n                      onChange={(e) => setAverage_life(e.target.value)}\r\n                      inputProps={{ min: old, max: 999 }}\r\n                    />\r\n                    <Typography variant=\"h6\" sx={{ pl: 1 }}>\r\n                      {\" \"}\r\n                      歳\r\n                    </Typography>\r\n                  </ListItem>\r\n                  <Divider sx={{ mt: 1, mb: 1 }} />\r\n                </List>\r\n\r\n                {/* </FormControl> */}\r\n              </CardContent>\r\n            </Card>\r\n            {isSelfGroupShow() && (\r\n              <Card\r\n                sx={{\r\n                  mb: 4,\r\n                  border: \"solid 1px #2196f3\",\r\n                }}\r\n              >\r\n                <CardHeader\r\n                  title={\r\n                    (role == 2 ? \"私の\" : selectedGroup?.name) +\r\n                    \"グループ内のカテゴリ閲覧権限\"\r\n                  }\r\n                />\r\n\r\n                <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n                <CardContent>\r\n                  {groupData?.map((checkbox: ICategory) => (\r\n                    <FormControlLabel\r\n                      key={checkbox.id}\r\n                      control={\r\n                        <Checkbox\r\n                          checked={allowedGroupCategories.includes(\r\n                            `${checkbox.id}`\r\n                          )}\r\n                          onChange={handleGroupCheckboxChange}\r\n                          value={checkbox.id}\r\n                        />\r\n                      }\r\n                      label={checkbox.name}\r\n                    />\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {selectedRole == \"3\" && (\r\n              <Card\r\n                sx={{\r\n                  mb: 4,\r\n                  border: \"solid 1px #2196f3\",\r\n                }}\r\n              >\r\n                <CardHeader title=\"全体共通グループ 【1】 内のカテゴリ閲覧権限\" />\r\n                <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n                <CardContent>\r\n                  {commonData?.map((checkbox: ICategory) => (\r\n                    <FormControlLabel\r\n                      key={checkbox.id}\r\n                      control={\r\n                        <Checkbox\r\n                          checked={allowedCommonCategories.includes(\r\n                            `${checkbox.id}`\r\n                          )}\r\n                          onChange={handleCommonCheckboxChange}\r\n                          value={checkbox.id}\r\n                        />\r\n                      }\r\n                      label={checkbox.name}\r\n                    />\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {selectedRole == \"2\" && (\r\n              <Card\r\n                sx={{\r\n                  mb: 4,\r\n                  border: \"solid 1px #2196f3\",\r\n                }}\r\n              >\r\n                <CardHeader title=\"全体共通グループ 【2】 内のカテゴリ閲覧権限\" />\r\n                <Divider sx={{ border: \"1px dotted #2196f3\" }} />\r\n\r\n                <CardContent>\r\n                  {commonData2?.map((checkbox: ICategory) => (\r\n                    <FormControlLabel\r\n                      key={checkbox.id}\r\n                      control={\r\n                        <Checkbox\r\n                          checked={allowedCommon2Categories?.includes(\r\n                            `${checkbox.id}`\r\n                          )}\r\n                          onChange={handleCommon2CheckboxChange}\r\n                          value={checkbox.id}\r\n                        />\r\n                      }\r\n                      label={checkbox.name}\r\n                    />\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            <Box sx={{ ml: 0, mb: 2 }}>\r\n              <FormLabel\r\n                id=\"demo-radio-buttons-group-label\"\r\n                sx={{ fontSize: \"1.5rem\", ml: 1, fontWeight: 400 }}\r\n              >\r\n                ステータス\r\n              </FormLabel>\r\n              <Card sx={{ mt: 2 }}>\r\n                <CardContent>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"status-radio-buttons-group-label\"\r\n                    value={status}\r\n                    name=\"radio-buttons-group\"\r\n                    onChange={handleStatusChange}\r\n                    sx={{ ml: 2 }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"1\"\r\n                      control={<Radio />}\r\n                      label=\"OK\"\r\n                      defaultChecked\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"2\"\r\n                      control={<Radio />}\r\n                      label=\"一時停止\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"3\"\r\n                      control={<Radio />}\r\n                      label=\"ブロック\"\r\n                    />\r\n                  </RadioGroup>\r\n                </CardContent>\r\n              </Card>\r\n            </Box>\r\n\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              sx={{ textAlign: \"right\", mb: 2, float: \"right\" }}\r\n            >\r\n              登録する\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n"],"names":["id","useParams","navigate","useNavigate","dispatch","useDispatch","all_categories","useSelector","state","blog","all_groups","user","auth","current_user","users","avatarInputRef","useRef","useCookies","cookies","usertoken","useState","name","setName","read_name","setReadName","email","setEmail","dateOfBirth","setDateOfBirth","user_id","setUserId","phone","setPhone","memo","setMemo","selectedRole","setSelectedRole","selectedDevice","setSelectedDevice","ninetieth_life","setNinetieth_life","work_life","setWork_life","die_life","setDie_life","healthy_life","setHealthy_life","average_life","setAverage_life","status","setStatus","old","setOld","commonData","setCommonData","commonData2","setCommonData2","groupData","setGroupData","selectedGroupId","setSelectedGroupId","selectedGroup","setSelectedGroup","teamGroups","setTeamGroups","dayjs","endOf","allowedCommonCategories","setAllowedCommonCategories","allowedCommon2Categories","setAllowedCommon2Categories","allowedGroupCategories","setAllowedGroupCategories","selectedAvatar","setSelectedAvatar","avatar","setAvatar","showRoleSelection","setShowRoleSelection","role","jwt_decode","parseInt","role_id","useEffect","GetUserById","currentDate","birthDate","currentAge","diff","console","log","getAllCategories","birthday","serverUrl","group_id","phone_number","phone_device","allowed_categories","JSON","parse","filteredGroups","filter","group","forEach","group1","handleCommonCheckboxChange","event","value","target","checked","prevValues","v","handleCommon2CheckboxChange","handleGroupCheckboxChange","isChecked","sx","width","xs","ms","md","lg","mb","fontSize","mt","color","ThemeColor","fontWeight","variant","border","borderRadius","onSubmit","preventDefault","toast","autoClose","formData","FormData","append","stringify","EditLeaderAction","EditUserAction","position","height","m","p","justifyContent","src","top","left","transform","onClick","current","click","component","display","ref","type","onChange","file","files","split","URL","createObjectURL","error","accept","style","spacing","direction","label","e","fullWidth","required","marginTop","title","row","control","labelId","tmp","map","ml","format","date","formattedDate","container","item","multiline","rows","padding","margin","primary","size","inputProps","min","max","pl","isSelfGroupShow","checkbox","includes","defaultChecked","textAlign","float"],"sourceRoot":""}