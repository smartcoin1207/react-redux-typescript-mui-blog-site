{"version":3,"file":"static/js/465.ef21c33c.chunk.js","mappings":"wTA6IA,UAzGuB,WACrB,IAAOA,GAAYC,EAAAA,EAAAA,MAAZD,SAEDE,GAAWC,EAAAA,EAAAA,MAIXC,IAHYC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMC,MAAMC,MAAM,KACpDH,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMG,KAAKC,IAAI,KAElDC,EAAAA,EAAAA,OAEjB,GAAoCC,EAAAA,EAAAA,UAAgB,IAAG,eAEvD,GAFiB,KAAe,MAEUA,EAAAA,EAAAA,UAAS,KAAG,eACtD,GADoB,KAAkB,MACRA,EAAAA,EAAAA,UAAS,KAAG,eAAnCC,EAAO,KAAEC,EAAU,KAC1B,GAA0BF,EAAAA,EAAAA,UAAS,IAAG,eAA/BG,EAAK,KAAEC,EAAQ,KAEhBN,GAAOO,EAAAA,EAAAA,MACbC,QAAQC,IAAIT,GACa,OAAJA,QAAI,IAAJA,GAAAA,EAAMU,SAE3BC,EAAAA,EAAAA,YAAU,WACRnB,GAASoB,EAAAA,EAAAA,IAAgBtB,GAC3B,GAAG,KAGHqB,EAAAA,EAAAA,YAAU,WACRnB,GAASqB,EAAAA,EAAAA,IAAe,SAC1B,GAAG,IAcH,OACE,UAAC,IAAG,CACFC,GAAI,CACFC,MAAO,CAACC,GAAI,OAAQC,GAAI,MAAOC,GAAI,MAAOC,GAAI,OAC9CC,QAAS,GACT,WAEF,SAAC,IAAU,CACTN,GAAI,CACFO,SAAU,OACVC,GAAI,EACJC,GAAI,EACJC,MAAOC,EAAAA,EAAAA,KACPC,WAAY,OAEdC,QAAQ,KAAI,SACb,sDAGD,SAAC,IAAO,CAACC,YAAY,gBAErB,iBAAMC,SAjCW,SAACC,GACpBA,EAAMC,iBAEJ,IAAMC,EAAU,CACd1C,SAAUA,EACVe,MAAOA,EACPF,QAASA,GAGXX,GAASyC,EAAAA,EAAAA,IAAQvC,EAAUsC,GAC/B,EAuBiC,UAC3B,UAAC,IAAG,YACF,SAAC,IAAS,CACRE,KAAK,OACLP,QAAQ,WACRH,MAAM,UACNW,MAAM,6CACNC,SAAU,SAACC,GAAC,OAAK/B,EAAS+B,EAAEC,OAAOC,MAAM,EACzCC,MAAO,CAAEC,aAAc,QACvBF,MAAOlC,EACPqC,WAAS,EACT5B,GAAI,CAAEQ,GAAI,GACVqB,UAAQ,KAGV,SAAC,IAAS,CACRT,KAAK,OACLP,QAAQ,WACRH,MAAM,UACNW,MAAM,iCACNC,SAAU,SAACC,GAAC,OAAKjC,EAAWiC,EAAEC,OAAOC,MAAM,EAC3CC,MAAO,CAAEC,aAAc,QACvBF,MAAOpC,EACPuC,WAAS,EACTE,WAAS,EACTC,KAAM,GACN/B,GAAI,CAAEQ,GAAI,GACVqB,UAAQ,KAEV,SAAC,IAAM,CACLhB,QAAQ,WACRH,MAAM,UACNU,KAAK,SACLY,KAAK,QACLhC,GAAI,CAAEiC,UAAW,QAASzB,GAAI,EAAG0B,MAAO,QAASC,OAAQ,IAAK,SAC/D,oCAOX,C,8bClHapC,EACX,SAACqC,GAAY,gDAAU,WAAO1D,GAA0B,sEACpDA,EAA0B,CACxB0C,KAAMiB,EAAAA,EAAAA,iBACNC,QAASF,IACR,2CACN,mDALY,EAKZ,EAEUG,EACX,WAD2B,gDAChB,WAAO7D,GAA0B,qGAEG8D,EAAAA,GAAAA,IAAU,gCAEnD,KAAD,EAFKC,EAA4B,OAIlC/D,EAAyB,CACvB0C,KAAMiB,EAAAA,EAAAA,mBACNC,QAASG,EAASC,OACjB,iDAEHC,EAAAA,EAAAA,GAAa,KAAMF,UAAU,yDAEhC,mDAd0B,EAc1B,EAEUG,EACX,SAACC,GAAO,gDACR,WAAOnE,GAA0B,qGAEc8D,EAAAA,GAAAA,IAAU,+BAAD,OACnBK,IAC/B,KAAD,EAFKJ,EAA4B,OAIlC/D,EAA2B,CACzB0C,KAAMiB,EAAAA,EAAAA,kBACNC,QAASG,EAASC,OACjB,iDAEHC,EAAAA,EAAAA,GAAa,KAAMF,UAAU,yDAEhC,mDAdO,EAcP,EAEUK,EACX,SAACD,GAAO,gDACR,WAAOnE,GAA0B,qGAEc8D,EAAAA,GAAAA,IAAU,+BAAD,OACnBK,IAC/B,KAAD,EAFKJ,EAA4B,OAIlC/D,EAA8B,CAC5B0C,KAAMiB,EAAAA,EAAAA,qBACNC,QAASG,EAASC,OACjB,iDAEHC,EAAAA,EAAAA,GAAa,KAAMF,UAAU,yDAEhC,mDAdO,EAcP,EAEU3C,EACX,SAAC+C,GAAO,gDACR,WAAOnE,GAA0B,qGAEc8D,EAAAA,GAAAA,IAAU,2BAAD,OACvBK,IAC3B,KAAD,EAFKJ,EAA4B,OAIlC/D,EAA2B,CACzB0C,KAAMiB,EAAAA,EAAAA,kBACNC,QAASG,EAASC,OACjB,iDAEHC,EAAAA,EAAAA,GAAa,KAAMF,UAAU,yDAEhC,mDAdO,EAcP,EAEUM,EACX,SAACnE,EAAeoE,GAAS,gDACzB,WAAOtE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,wBAEpDQ,EACAC,GACA,KAAD,EAJKR,EAA4B,OAMlC/D,EAA2B,CACzB0C,KAAMiB,EAAAA,EAAAA,kBACNC,QAASG,EAASC,KAAKS,iBAGzBR,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDAvBwB,EAuBxB,EAEYW,EACb,SAACxE,EAAeoE,EAAWH,GAAO,gDAClC,WAAOnE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,yBAAD,OAC1BK,GACzBG,EACAC,GACA,KAAD,EAJKR,EAA4B,OAMlC/D,EAA2B,CACzB0C,KAAMiB,EAAAA,EAAAA,kBACNC,QAASG,EAASC,KAAKS,iBAGzBR,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDAvBiC,EAuBjC,EAEYY,EACb,SAACR,GAAO,gDACR,WAAOnE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,yBAAD,OAC1BK,GACzBI,GACA,KAAD,EAHKR,EAA4B,OAKlC/D,EAA2B,CACzB0C,KAAMiB,EAAAA,EAAAA,kBACNC,QAASG,EAASC,KAAKS,iBAGzBR,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDAtBO,EAsBP,EAEUa,EACb,SAAC1E,EAAeoE,GAAS,gDACzB,WAAOtE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,qBAEpDQ,EACAC,GACA,KAAD,EAJKR,EAA4B,OAMlC/D,EAA8B,CAC5B0C,KAAMiB,EAAAA,EAAAA,qBACNC,QAASG,EAASC,KAAKa,oBAGzBZ,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDAvBwB,EAuBxB,EAEYe,EACb,SAAC5E,EAAeoE,EAAWH,GAAO,gDAClC,WAAOnE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,sBAAD,OAC7BK,GACtBG,EACAC,GACA,KAAD,EAJKR,EAA4B,OAMlC/D,EAA8B,CAC5B0C,KAAMiB,EAAAA,EAAAA,qBACNC,QAASG,EAASC,KAAKa,oBAGzBZ,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDAvBiC,EAuBjC,EAEYgB,EACb,SAACZ,GAAO,gDACR,WAAOnE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,sBAAD,OAC7BK,GACtBI,GACA,KAAD,EAHKR,EAA4B,OAKlC/D,EAA8B,CAC5B0C,KAAMiB,EAAAA,EAAAA,qBACNC,QAASG,EAASC,KAAKa,oBAGzBZ,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDAtBO,EAsBP,EAGYiB,EACb,SAAC9E,EAAeiE,GAAO,gDACvB,WAAOnE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,IAAU,mBAAD,OAC/BK,GACnBI,GACA,KAAD,EAHKR,EAA4B,OAKlC/D,EAA0B,CACtB0C,KAAMiB,EAAAA,EAAAA,iBACNC,QAASG,EAASC,OAKtB,iDAEAC,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDAxBsB,EAwBtB,EAGYtB,EACb,SAACvC,EAAe+E,GAAS,gDACzB,WAAOjF,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,oBAEpDmB,EACAV,GACA,KAAD,GAJKR,EAA4B,QAKtBmB,OAAS,KACjBhF,EAAS,eAAD,OAAoB,OAAJ+E,QAAI,IAAJA,OAAI,EAAJA,EAAMnF,YAElCmE,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDApBwB,EAoBxB,EAEYoB,EACb,SAACjF,EAAe+E,EAAWd,GAAO,gDAClC,WAAOnE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,qBAAD,OAC9BK,GACrBc,EACAV,GACA,KAAD,GAJKR,EAA4B,QAMtBmB,OAAQ,KAChBhF,EAAS,cAAD,OAAeiE,KAE3BF,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDArBiC,EAqBjC,EAEYqB,EACb,SAACjB,GAAO,gDACR,WAAOnE,GAA0B,8EAM5B,OAN4B,SAEvBuE,EAAiB,CACrBC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAC0CV,EAAAA,GAAAA,KAAW,qBAAD,OAC9BK,GACrBI,GACA,KAAD,EAHKR,EAA4B,OAKlC/D,EAA2B,CACzB0C,KAAMiB,EAAAA,EAAAA,kBACNC,QAASG,EAASC,KAAKqB,iBAEzBpB,EAAAA,EAAAA,GAAaF,GAAU,iDAEvBE,EAAAA,EAAAA,GAAa,KAAIF,UAAU,yDAE9B,mDArBO,EAqBP,C,qEC/VD,MCAe,SAAsBuB,EAASC,GAC5C,IAAIC,EAAUC,EACd,OAAoBC,EAAAA,eAAqBJ,KAGiM,IAHrLC,EAASI,QAGzB,OAApCH,EAAWF,EAAQ5C,KAAKkD,SAAmBJ,EAA6C,OAAjCC,EAAgBH,EAAQ5C,OAA6D,OAA3C+C,EAAgBA,EAAcI,WAA8D,OAAxCJ,EAAgBA,EAAc1C,YAAiB,EAAS0C,EAAcG,QAC9N,C,qFCJIE,EAAW,EAkBf,IAAMC,GAAkBL,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAM,QAAQM,YAOvB,SAASC,EAAMC,GAC5B,QAAwBC,IAApBJ,EAA+B,CACjC,IAAMK,EAAUL,IAChB,OAAqB,MAAdG,EAAqBA,EAAaE,CAC3C,CAEA,OA9BF,SAAqBF,GACnB,MAAkCR,EAAAA,SAAeQ,GAAW,eAArDG,EAAS,KAAEC,EAAY,KACxBnC,EAAK+B,GAAcG,EAWzB,OAVAX,EAAAA,WAAgB,WACG,MAAbW,GAMFC,EAAa,OAAD,OADZR,GAAY,GAGhB,GAAG,CAACO,IACGlC,CACT,CAgBSoC,CAAYL,EACrB,C","sources":["pages/blogs/CreateBlog.tsx","redux/actionCreators/blogActions.tsx","../node_modules/@mui/material/utils/isMuiElement.js","../node_modules/@mui/utils/esm/isMuiElement.js","../node_modules/@mui/utils/esm/useId/useId.js"],"sourcesContent":["import { useEffect, useState, ReactElement, FC } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TreeView, TreeItem } from \"@mui/x-tree-view\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport { RootState } from \"../../redux/store/store\";\r\nimport {\r\n  AddBlog, getCurrentGenre, setCurrentPage,\r\n} from \"../../redux/actionCreators/blogActions\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { getUserFromToken } from \"../../util/util\";\r\nimport { ThemeColor } from \"../../styles/GlobalStyle\";\r\n\r\ninterface IUser {\r\n  name: string;\r\n  user_id?: string | null;\r\n  role_id: string;\r\n}\r\n\r\nconst CreateBlog: FC = (): ReactElement => {\r\n  const {genre_id} = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const allGenres = useSelector((state: RootState) => state.users.genres);\r\n  const auth_user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [categories, setCategories] = useState<any[]>([]);\r\n\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const user = getUserFromToken();\r\n  console.log(user);\r\n  const role: number = user?.role_id;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentGenre(genre_id))\r\n  }, [])\r\n\r\n  \r\n  useEffect(() => {\r\n    dispatch(setCurrentPage('genre'));\r\n  }, [])\r\n  \r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n\r\n      const newBlog = {\r\n        genre_id: genre_id,\r\n        title: title,\r\n        content: content,\r\n      };\r\n  \r\n      dispatch(AddBlog(navigate, newBlog));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: {xs: '100%', ms: '90%', md: '90%', lg: '80%'},\r\n        padding: 4,\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{\r\n          fontSize: \"2rem\",\r\n          mt: 4,\r\n          mb: 4,\r\n          color: ThemeColor.main,\r\n          fontWeight: \"600\",\r\n        }}\r\n        variant=\"h4\"\r\n      >\r\n        ブログを作成する\r\n      </Typography>\r\n      <Divider orientation=\"horizontal\" />\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Box>\r\n          <TextField\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            label=\"記事のタイトル\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            style={{ borderRadius: \"10px\" }}\r\n            value={title}\r\n            fullWidth\r\n            sx={{ mt: 4 }}\r\n            required\r\n          />\r\n\r\n          <TextField\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            label=\"記事の内容\"\r\n            onChange={(e) => setContent(e.target.value)}\r\n            style={{ borderRadius: \"10px\" }}\r\n            value={content}\r\n            fullWidth\r\n            multiline\r\n            rows={12}\r\n            sx={{ mt: 4 }}\r\n            required\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            sx={{ textAlign: \"right\", mt: 4, float: \"right\", height: 50 }}\r\n          >\r\n            記事投稿\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateBlog;\r\n","import { Dispatch } from \"redux\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport axios from \"../../services/axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { IAuth as Auth, IBasicData } from \"../../models/auth\";\r\n\r\nimport {\r\n  Action,\r\n  ActionType,\r\n  IAllCategories,\r\n  IGetCurrentGroup,\r\n  IGetCurrentCategory,\r\n  IGetCurrentGenre,\r\n  IGetCurrentBlog,\r\n  ISetCurrentPage,\r\n} from \"../actionTypes/blogActionTypes\";\r\n\r\nimport { ToastMessage } from \"../../util/toast\";\r\n\r\ntype Config = {\r\n  headers: Record<string, string>;\r\n};\r\n\r\nexport const setCurrentPage  = \r\n  (page: string): any => async (dispatch: Dispatch<Action>) => {\r\n      dispatch<ISetCurrentPage>({\r\n        type: ActionType.SET_CURRENT_PAGE,\r\n        payload: page\r\n      });\r\n  };\r\n\r\nexport const getAllCategories =\r\n  (): any => async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n      const response: AxiosResponse<any> = await axios.get(\r\n        `/auth/category/allcategories`\r\n      );\r\n\r\n      dispatch<IAllCategories>({\r\n        type: ActionType.GET_ALL_CATEGORIES,\r\n        payload: response.data,\r\n      });\r\n    } catch (error: any) {\r\n      ToastMessage(error.response);\r\n    }\r\n  };\r\n\r\nexport const getCurrentGroup =\r\n  (id: any): any =>\r\n  async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n      const response: AxiosResponse<any> = await axios.get(\r\n        `/auth/category/currentgroup/${id}`\r\n      );\r\n\r\n      dispatch<IGetCurrentGroup>({\r\n        type: ActionType.GET_CURRENT_GROUP,\r\n        payload: response.data,\r\n      });\r\n    } catch (error: any) {\r\n      ToastMessage(error.response);\r\n    }\r\n  };\r\n\r\nexport const getCurrentCategory =\r\n  (id: any): any =>\r\n  async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n      const response: AxiosResponse<any> = await axios.get(\r\n        `/auth/genre/currentcategory/${id}`\r\n      );\r\n\r\n      dispatch<IGetCurrentCategory>({\r\n        type: ActionType.GET_CURRENT_CATEGORY,\r\n        payload: response.data,\r\n      });\r\n    } catch (error: any) {\r\n      ToastMessage(error.response);\r\n    }\r\n  };\r\n\r\nexport const getCurrentGenre =\r\n  (id: any): any =>\r\n  async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n      const response: AxiosResponse<any> = await axios.get(\r\n        `/auth/blog/currentgenre/${id}`\r\n      );\r\n\r\n      dispatch<IGetCurrentGenre>({\r\n        type: ActionType.GET_CURRENT_GENRE,\r\n        payload: response.data,\r\n      });\r\n    } catch (error: any) {\r\n      ToastMessage(error.response);\r\n    }\r\n  };\r\n\r\nexport const AddStep =\r\n  (navigate: any, step: any): any =>\r\n  async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n      const config: Config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const response: AxiosResponse<any> = await axios.post(\r\n        `/auth/category/create`,\r\n        step,\r\n        config\r\n      );\r\n\r\n      dispatch<IGetCurrentGroup>({\r\n        type: ActionType.GET_CURRENT_GROUP,\r\n        payload: response.data.current_group,\r\n      });\r\n      // navigate(\"/step/index\");\r\n      ToastMessage(response);\r\n    } catch (err: any) {\r\n      ToastMessage(err.response);\r\n    }\r\n  };\r\n\r\n  export const EditStep =\r\n  (navigate: any, step: any, id: any): any =>\r\n  async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n      const config: Config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const response: AxiosResponse<any> = await axios.post(\r\n        `/auth/category/update/${id}`,\r\n        step,\r\n        config\r\n      );\r\n\r\n      dispatch<IGetCurrentGroup>({\r\n        type: ActionType.GET_CURRENT_GROUP,\r\n        payload: response.data.current_group,\r\n      });\r\n      // navigate(\"/step/index\");\r\n      ToastMessage(response);\r\n    } catch (err: any) {\r\n      ToastMessage(err.response);\r\n    }\r\n  };\r\n\r\n  export const DeleteStep =\r\n  (id: any): any =>\r\n  async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n      const config: Config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const response: AxiosResponse<any> = await axios.post(\r\n        `/auth/category/delete/${id}`,\r\n        config\r\n      );\r\n\r\n      dispatch<IGetCurrentGroup>({\r\n        type: ActionType.GET_CURRENT_GROUP,\r\n        payload: response.data.current_group,\r\n      });\r\n      // navigate(\"/step/index\");\r\n      ToastMessage(response);\r\n    } catch (err: any) {\r\n      ToastMessage(err.response);\r\n    }\r\n  };\r\n\r\nexport const AddGenre =\r\n(navigate: any, step: any): any =>\r\nasync (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    const config: Config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const response: AxiosResponse<any> = await axios.post(\r\n      `/auth/genre/create`,\r\n      step,\r\n      config\r\n    );\r\n\r\n    dispatch<IGetCurrentCategory>({\r\n      type: ActionType.GET_CURRENT_CATEGORY,\r\n      payload: response.data.current_category,\r\n    });\r\n    // navigate(\"/step/index\");\r\n    ToastMessage(response);\r\n  } catch (err: any) {\r\n    ToastMessage(err.response);\r\n  }\r\n};\r\n\r\nexport const EditGenre =\r\n(navigate: any, step: any, id: any): any =>\r\nasync (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    const config: Config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const response: AxiosResponse<any> = await axios.post(\r\n      `/auth/genre/update/${id}`,\r\n      step,\r\n      config\r\n    );\r\n\r\n    dispatch<IGetCurrentCategory>({\r\n      type: ActionType.GET_CURRENT_CATEGORY,\r\n      payload: response.data.current_category,\r\n    });\r\n    // navigate(\"/step/index\");\r\n    ToastMessage(response);\r\n  } catch (err: any) {\r\n    ToastMessage(err.response);\r\n  }\r\n};\r\n\r\nexport const DeleteGenre =\r\n(id: any): any =>\r\nasync (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    const config: Config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const response: AxiosResponse<any> = await axios.post(\r\n      `/auth/genre/delete/${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch<IGetCurrentCategory>({\r\n      type: ActionType.GET_CURRENT_CATEGORY,\r\n      payload: response.data.current_category   ,\r\n    });\r\n    // navigate(\"/step/index\");\r\n    ToastMessage(response);\r\n  } catch (err: any) {\r\n    ToastMessage(err.response);\r\n  }\r\n};\r\n\r\n\r\nexport const GetBlog =\r\n(navigate: any, id: any): any =>\r\nasync (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    const config: Config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const response: AxiosResponse<any> = await axios.get(\r\n      `/auth/blog/show/${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch<IGetCurrentBlog>({\r\n        type: ActionType.GET_CURRENT_BLOG,\r\n        payload: response.data,\r\n      });\r\n\r\n    // if(response.status <300) {\r\n    //     navigate(`/blogs/blog/edit/${id}`);\r\n    // }\r\n  } catch (err: any) {\r\n    ToastMessage(err.response);\r\n  }\r\n};\r\n\r\n\r\nexport const AddBlog =\r\n(navigate: any, blog: any): any =>\r\nasync (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    const config: Config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const response: AxiosResponse<any> = await axios.post(\r\n      `/auth/blog/create`,\r\n      blog,\r\n      config\r\n    );\r\n    if(response.status < 300) {\r\n        navigate(`/blog/blogs/${blog?.genre_id}`);\r\n    }\r\n    ToastMessage(response);\r\n  } catch (err: any) {\r\n    ToastMessage(err.response);\r\n  }\r\n};\r\n\r\nexport const UpdateBlog =\r\n(navigate: any, blog: any, id: any): any =>\r\nasync (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    const config: Config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const response: AxiosResponse<any> = await axios.post(\r\n      `/auth/blog/update/${id}`,\r\n      blog,\r\n      config\r\n    );\r\n\r\n    if(response.status <300) {\r\n        navigate(`/blog/show/${id}`);\r\n    }\r\n    ToastMessage(response);\r\n  } catch (err: any) {\r\n    ToastMessage(err.response);\r\n  }\r\n};\r\n\r\nexport const DeleteBlog =\r\n(id: any): any =>\r\nasync (dispatch: Dispatch<Action>) => {\r\n  try {\r\n    const config: Config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const response: AxiosResponse<any> = await axios.post(\r\n      `/auth/blog/delete/${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch<IGetCurrentGenre>({\r\n      type: ActionType.GET_CURRENT_GENRE,\r\n      payload: response.data.current_genre\r\n    });\r\n    ToastMessage(response);\r\n  } catch (err: any) {\r\n    ToastMessage(err.response);\r\n  }\r\n};\r\n","import { unstable_isMuiElement as isMuiElement } from '@mui/utils';\nexport default isMuiElement;","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  var _muiName, _element$type;\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf( // For server components `muiName` is avaialble in element.type._payload.value.muiName\n  // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45\n  // eslint-disable-next-line no-underscore-dangle\n  (_muiName = element.type.muiName) != null ? _muiName : (_element$type = element.type) == null || (_element$type = _element$type._payload) == null || (_element$type = _element$type.value) == null ? void 0 : _element$type.muiName) !== -1;\n}","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId'.toString()];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}"],"names":["genre_id","useParams","dispatch","useDispatch","navigate","useSelector","state","users","genres","auth","user","useNavigate","useState","content","setContent","title","setTitle","getUserFromToken","console","log","role_id","useEffect","getCurrentGenre","setCurrentPage","sx","width","xs","ms","md","lg","padding","fontSize","mt","mb","color","ThemeColor","fontWeight","variant","orientation","onSubmit","event","preventDefault","newBlog","AddBlog","type","label","onChange","e","target","value","style","borderRadius","fullWidth","required","multiline","rows","size","textAlign","float","height","page","ActionType","payload","getAllCategories","axios","response","data","ToastMessage","getCurrentGroup","id","getCurrentCategory","AddStep","step","config","headers","current_group","EditStep","DeleteStep","AddGenre","current_category","EditGenre","DeleteGenre","GetBlog","blog","status","UpdateBlog","DeleteBlog","current_genre","element","muiNames","_muiName","_element$type","React","indexOf","muiName","_payload","globalId","maybeReactUseId","toString","useId","idOverride","undefined","reactId","defaultId","setDefaultId","useGlobalId"],"sourceRoot":""}